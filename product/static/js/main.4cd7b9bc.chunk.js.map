{"version":3,"sources":["commons/axios.js","static/login/bg.png","static/login/smallcar.png","pages/App.js","url.js","components/CountUp.js","components/OrderBrief.js","components/OrderList.js","components/Header.js","icons/1.png","components/Menu.js","components/LeafletMap.js","pages/CustomerMain.js","pages/CustomerProfile.js","pages/VendorPark.js","pages/VendorOrders.js","router.js","index.js"],"names":["baseUrl","axios","_axios","create","baseURL","Link","Typography","App","props","useState","show","setShow","email","setEmail","password","setPassword","name","setName","lat","setLat","lng","setLng","vendors","setVendors","modal","setModal","handleShow","e","target","outerText","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","response","data","customerModal","Modal","Header","closeButton","style","background","borderColor","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","onChange","value","Text","className","onClick","history","push","Footer","varient","shape","post","success","message","customer","error","catch","console","log","vendorModal","vendor","_id","width","height","backgroundImage","imagebg","backgroundSize","backgroundRepeat","onHide","marginTop","Jumbotron","top","right","display","flexDirection","justifyContent","alignItems","textAlign","color","fontSize","borderRadius","backgroundColor","src","imagesmallcar","variant","marginLeft","URLs","socketURL","CountUp","state","min","sec","now","Date","upd","parse","this","updatedAt","setState","parseInt","timerID","setInterval","tick","clearInterval","strong","Component","TextArea","Input","Meta","Card","OrderBrief","handleClose","modalVisible","handleEditClose","editModalVisible","handleEditShow","index","event","newArray","order","handleShowOrderDetail","ratingsChange","ratings","commentChange","comment","handleEditOrder","status","diff","notification","open","description","duration","onOrderMark","statusToBeUpdated","discount","total","onOrderSubmit","submitOrder","i","length","Number","isFinite","menu","snacks","onCommentSubmit","renderActions","window","location","pathname","EyeOutlined","EditOutlined","renderEditModalContent","map","snack","cover","alt","picture","marginBottom","size","title","price","defaultValue","Button","id","qty","rows","modalBody","getTime","disabled","Ribbon","text","margin","actions","React","Orders","orders","setOrders","setStatus","a","allOrders","fetchData","renderOrders","image","imageStyle","OrderList","socket","io","transports","on","updatedOrders","filter","useHistory","drawerVisible","setDrawerVisible","handleDrawerShow","setTitle","options","setOptions","setTarget","givenName","goBack","onUnpark","textAddress","parked","extra","visible","closable","onClose","Menu","vendorIcon","Icon","iconUrl","iconSize","setIsModalVisible","setOrder","Marker","icon","eventHandlers","click","j","hoverable","LeafletMap","address","setAddress","center","setPosition","useMemo","dragend","getLatLng","renderCustomerMarker","Popup","renderFiveVendor","renderVendorMarker","draggable","zoom","scrollWheelZoom","TileLayer","url","attribution","CustomerMain","setSnacks","CustomerProfile","useForm","form","setGivenName","familyName","setFamilyName","disable","setDisable","layout","Item","label","updateBody","VendorPark","VendorOrders","gutter","Router","path","exact","component","VendorOrder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cd7b9bc.chunk.js","sourcesContent":["import _axios from 'axios';\r\n\r\nconst axios = baseUrl => {\r\n    const instance = _axios.create({\r\n        // baseURL: baseUrl || 'http://localhost:8080'\r\n        baseURL: baseUrl || 'https://fooodtruck.herokuapp.com:8080'\r\n    });\r\n    return instance;\r\n};\r\n\r\nexport { axios };\r\n\r\nexport default axios();","export default __webpack_public_path__ + \"static/media/bg.00b4da9e.png\";","export default __webpack_public_path__ + \"static/media/smallcar.89cdf72b.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, OverlayTrigger, Tooltip, Modal, Form } from 'react-bootstrap';\r\nimport { message, Typography } from 'antd';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport axios from '../commons/axios.js';\r\nimport { Button } from 'antd';\r\nimport imagebg from '../static/login/bg.png';\r\nimport imagesmallcar from '../static/login/smallcar.png';\r\n\r\nconst { Link } = Typography;\r\n\r\nfunction App(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const [lat, setLat] = useState(''); \r\n    const [lng, setLng] = useState('');\r\n    const [vendors, setVendors] = useState([]); \r\n\r\n    const [modal, setModal] = useState('');\r\n\r\n    const handleClose = () => setShow(false);\r\n    \r\n    /**\r\n    *Select appear modal for customer and vendor\r\n    */\r\n    const handleShow = (e) => {\r\n      if (e.target.outerText === \"Customer\") {\r\n        setModal('customer')\r\n      } else {\r\n        setModal('vendor')\r\n      }\r\n      setShow(true)\r\n    };\r\n    \r\n    /**\r\n    * Get geolocation from website\r\n    */ \r\n    useEffect(() => {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setLat(position.coords.latitude)\r\n        setLng(position.coords.longitude)\r\n      });\r\n      axios.get('/vendor?lat=' + lat + '&lng=' + lng).then(response => {\r\n          setVendors(response.data.vendors)\r\n      })\r\n    }, [lat, lng])\r\n\r\n    // For customer login\r\n    const onCustomerLogin = () => {\r\n        axios.post('/customer/login', { email: email, password: password }).then(response => {\r\n            if (response.data.success) {              \r\n              message.success('You have logged in successfully :)')\r\n              props.history.push('/customer', {\r\n                customer: response.data.customer,\r\n                vendors: vendors,\r\n                position: [lat, lng]\r\n              });\r\n            } else {\r\n              message.error(response.data.error)\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n            message.error('You may enter the wrong password :(')\r\n        })\r\n    }\r\n\r\n  // For customer click the register button\r\n  const onCustomerRegister = () => {\r\n    axios.post('/customer/register', { email: email, password: password }).then(response => {\r\n        if (response.data.success) {              \r\n          message.success('You have registered successfully :)')\r\n          props.history.push('/customer', {\r\n                  customer: response.data.customer,\r\n                  vendors: vendors,\r\n                  position: [lat, lng]\r\n              });\r\n          } else {\r\n              message.error(response.data.error)\r\n          }\r\n      }).catch(error => {\r\n        console.log(error)\r\n        message.error('The email was registered, try to use another one :(')\r\n      })    \r\n  }\r\n  // For vendor login if they click the login button\r\n  const onVendorLogin = () => {\r\n    axios.post('/vendor/login', { name: name, password: password }).then(response => {\r\n        if (response.data.success) {\r\n            message.success('You have logged in successfully :)')\r\n            console.log(\"App-92 \" + response.data.vendor._id +\"!\")\r\n            props.history.push('/vendor', {\r\n                vendor: response.data.vendor,\r\n                position: [lat, lng],\r\n                vendors:[]\r\n            });\r\n        } else {\r\n            message.error(response.data.error)\r\n        }\r\n    }).catch(error => {\r\n      setShow(false);\r\n        console.log(error.response.data.error)\r\n        message.error('You may enter the wrong password :(')\r\n    })\r\n}\r\n\r\n  // For vendor click the \r\n  const onVendorRegister = () => {\r\n    axios.post('/vendor/register', { name: name, password: password }).then(response => {\r\n        if (response.data.success) {              \r\n          message.success('You have registered successfully, start your business :)')\r\n          props.history.push('/vendor', {\r\n              vendor: response.data.vendor,\r\n              position: [lat, lng],\r\n              vendors:[]\r\n              });\r\n          } else {\r\n              message.error(response.data.error)\r\n          }\r\n      }).catch(error => {\r\n        console.log(error)\r\n        message.error('The name was registered, try to use another one :(')\r\n      })    \r\n  }\r\n\r\n\r\n    const onSkip = () => {\r\n      props.history.push('/customer', {\r\n        position: [lat, lng],\r\n        vendors: vendors\r\n      });\r\n    }\r\n    const customerModal = (\r\n      <>\r\n        <Modal.Header closeButton style={{ background: '#F50057', borderColor: 'Black' }} >\r\n          <Modal.Title>Customer Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email Adress</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                onChange={e => setEmail(e.target.value)} />\r\n              <Form.Text className=\"text-muted\">\r\n                We promise that we shall never send un-related emails to you nor share your email address with third party.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\"\r\n                onChange={e => setPassword(e.target.value)} />\r\n            </Form.Group>\r\n          </Form>\r\n          <Link onClick={onSkip}>Sign in later</Link>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button varient=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={onCustomerLogin}>\r\n            Login\r\n            </Button>\r\n          <Button varient=\"primary\" style={{ background: 'White', borderColor: 'Black' }} shape=\"round\" onClick={onCustomerRegister}>\r\n            Register\r\n          </Button>\r\n        </Modal.Footer>       \r\n      </>\r\n    )\r\n\r\n    const vendorModal = (\r\n      <div>\r\n        <Modal.Header closeButton style={{ background: '#F50057', borderColor: 'Black' }} >\r\n              <Modal.Title>Vendor Login</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Name</Form.Label>\r\n                 <Form.Control type=\"email\" placeholder=\"Enter name\"\r\n                   onChange={e => setName(e.target.value)} />\r\n                 <Form.Text className=\"text-muted\">\r\n                 </Form.Text>\r\n                </Form.Group>\r\n               <Form.Group controlId=\"formBasicPassword\">\r\n                 <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\"\r\n                   onChange={e => setPassword(e.target.value)} />\r\n                  </Form.Group>\r\n               </Form>\r\n              </Modal.Body>\r\n             <Modal.Footer>\r\n                <Button varient=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={onVendorLogin}>\r\n                  Login\r\n                </Button>\r\n                <Button varient=\"primary\" style={{ background: 'White', borderColor: 'Black' }} shape=\"round\" onClick={onVendorRegister}>\r\n                  Register\r\n                </Button>\r\n          </Modal.Footer>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div className={'login-page'} style={{ width: \"100%\",height:'calc(100vh)', backgroundImage:'url('+imagebg+')' ,backgroundSize:'100% calc(100vh)',backgroundRepeat:'no-repeat',position:'relative' }}>\r\n        <Modal show={show} onHide={handleClose} style={{ marginTop: '2vh'}}>\r\n          {(modal === \"customer\") ? customerModal : vendorModal}\r\n        </Modal>\r\n        <Jumbotron style={{background: \"transparent\",position:'absolute',top:'40%',right:'20%',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n            <h3 style={{textAlign:'center',}}>Welcome to</h3>\r\n            <h1 style={{textAlign:'center',color:'rgb(247,64,129)',fontSize:'50px'}}>FoodTruck</h1>\r\n            <p style={{textAlign:'center',fontSize:'18px'}}>\r\n              Discover our best food trucks\r\n            </p>\r\n            <div style={{width:'200px',height:'150px',position:'absolute',top:'-180px',borderRadius:'50%',backgroundColor:'#eee',display:'flex',justifyContent:'center'}}>\r\n              <img src={imagesmallcar} style={{width:'65%',height:'80%',marginTop:'20px'}} />\r\n            </div>\r\n            <p>\r\n                <Button variant=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={handleShow}>Customer</Button>\r\n                <Button variant=\"outline-primary\" style={{ background: 'White', borderColor: 'Black', marginLeft:'1vw'}} shape=\"round\" onClick={handleShow}>Vendor</Button>\r\n            </p>\r\n        </Jumbotron>\r\n        </div> \r\n\r\n        \r\n    )\r\n}\r\nexport default App;\r\n","let URLs = {};\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    URLs = {\r\n        baseURL: \"/api\",\r\n        // socketURL: \"https://snacksinavan2021.herokuapp.com/api\",\r\n        socketURL:\"https://fooodtruck.herokuapp.com:8080/api\"\r\n\r\n    };\r\n} else {\r\n    URLs = {\r\n        baseURL: \"https://fooodtruck.herokuapp.com:8080/api\",\r\n        socketURL: \"https://fooodtruck.herokuapp.com:8080/api\",\r\n\r\n    };\r\n}\r\nexport default URLs;","import React, { Component } from 'react'\r\nimport {Typography} from 'antd';\r\nconst { Text } = Typography;\r\n\r\nexport default class CountUp extends Component{\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            min:\"\",\r\n            sec:\"\"\r\n        }\r\n    }\r\n    \r\n    tick() {\r\n        let now = new Date()\r\n        let upd = Date.parse(this.props.updatedAt)\r\n        // Count minutes and second passed\r\n        let min = (now - upd) / 60000\r\n        this.setState({ min: parseInt(min) })\r\n        let sec = ((now - upd) - this.state.min * 60000) / 1000\r\n        this.setState({ sec: parseInt(sec) })\r\n    }\r\n    // updates this DOM every second\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(), 1000);\r\n    }\r\n    // Remove the timer and let the interval start again\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerID); \r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Text strong={true}>{this.state.min + \" mins \" + this.state.sec + \" secs \"}</Text>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { InputNumber, Card, notification, message, Rate, Divider, Input ,Badge } from 'antd';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nimport{ EyeOutlined, EditOutlined, CheckOutlined } from '@ant-design/icons';\r\n\r\nimport CountUp from './CountUp.js';\r\nimport axios from '../commons/axios';\r\n\r\n\r\nconst{ TextArea } = Input;\r\nconst{ Meta } = Card;\r\n\r\nexport default class OrderBrief extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            menu:[],\r\n            order:[],\r\n            modalVisible: false,\r\n            editModalVisible:false,\r\n            modalBody:<></>,\r\n            diff: '',\r\n            ratings: 0,\r\n            comment: \"\"\r\n        }\r\n    }\r\n    handleClose = () => this.setState({modalVisible: false});\r\n    handleShow = () => this.setState({modalVisible: true});\r\n\r\n    handleEditClose = () => this.setState({editModalVisible: false});\r\n    handleEditShow = () => this.setState({editModalVisible: true});\r\n\r\n    onChange = (index, event) => {\r\n        let newArray = [...this.state.order];\r\n        newArray[index] = event;\r\n        this.setState({ order: newArray })\r\n    }\r\n    // Calculate time changed\r\n    tick() {\r\n        let now = new Date().getTime()\r\n        let upd = Date.parse(this.props.order.updatedAt)\r\n        this.setState({diff: ((now - upd) / 60000) })\r\n    }\r\n    // updates this DOM every second\r\n    componentDidMount() {\r\n        axios.get('/snack').then(response => {\r\n            this.setState({ menu: response.data.snacks })\r\n        })\r\n        this.timerID = setInterval(() => this.tick(), 1000)\r\n    }\r\n    // Remove the timer and let the interval start again\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    handleShowOrderDetail = () => {\r\n        console.log(this.props.order)\r\n    }\r\n\r\n    ratingsChange = (value) => {\r\n        console.log(value)\r\n        this.setState({ ratings: value});\r\n    }\r\n\r\n    commentChange = (value) => {\r\n        this.setState({ comment: value});\r\n    }\r\n\r\n    // Check the business rule to ensure the edition of order is up to specificaton\r\n    handleEditOrder = () => {\r\n        if (this.props.order.status === \"outstanding\" && this.state.diff <= 10) {\r\n            this.setState({ editModalVisible: true});\r\n        }\r\n        if (this.props.order.status === \"fulfilled\") {\r\n            notification.open({\r\n                message:'Order is ready to be collected!',\r\n                description:'You cannot make any changes to a fulfilled order. You can rate your experience after picking up the snacks.',\r\n                duration:3\r\n            })\r\n        }else if (this.props.order.status === \"outstanding\" && this.state.diff > 10){\r\n            notification.open ({\r\n                message:'Order is being processed!',\r\n                description :'You can only change your order within 10 minutes after placing the order.',\r\n                duration :3\r\n            });\r\n        }else {\r\n            console.log(this.props.order)\r\n            this.setState({ editModalVisible: true});\r\n        }\r\n    }\r\n    // Allow vendor to mark the order as fulfilled and completed and calculate total price.\r\n    // A discount badge will appear if the order is fulfilled after 15 minutes.\r\n    onOrderMark = () => {\r\n        var statusToBeUpdated, discount, total\r\n        var total = this.props.order.total\r\n        // mark outstanding order to fulfilled and check whether discount applies.\r\n        if (this.props.order.status === \"outstanding\"){\r\n            statusToBeUpdated = \"fulfilled\"\r\n            if (this.state.diff > 15) {\r\n                discount = true\r\n                total = total * 0.8\r\n            } else {\r\n                discount = false\r\n            }\r\n            axios.post('/order/'+ this.props.order._id +'/update', {\r\n                total: total,\r\n                discount: discount,\r\n                status: statusToBeUpdated\r\n            }).then(response => {\r\n                if (response.data.success) {\r\n                    message.success(\"Order has been updated\")\r\n                    this.setState({ editModalVisible: false});\r\n                } else {\r\n                    message.error(\"Order updating errored!\")\r\n                }   \r\n            })\r\n        // Mark fulfilled order to completed order\r\n        } else if (this.props.order.status === \"fulfilled\"){\r\n            statusToBeUpdated = \"completed\"\r\n            axios.post('/order/'+ this.props.order._id +'/update', {\r\n                status: statusToBeUpdated\r\n            }).then(response => {\r\n                if (response.data.success) {\r\n                    message.success(\"Order has been updated\")\r\n                    this.setState({ editModalVisible: false });\r\n                } else {\r\n                    message.error(\"Order updating errored!\")\r\n                }   \r\n            })\r\n        // if the order is already completed, it will remind the vendor\r\n        } else {\r\n            notification.open({\r\n                message: 'Order is already completed!',\r\n                description: 'Congratulations! You have completed this order!', \r\n                duration: 3\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // All customer to resubmit a new order by editing exist order\r\n    onOrderSubmit = () => {\r\n        var submitOrder = []\r\n        for (var i = 0; i < this.state.order.length; i++) {\r\n            if(Number.isFinite(this.state.order[i])) {\r\n                submitOrder.push({\r\n                    \"name\": this.state.menu[i].name,\r\n                    \"qty\": this.state.order[i]\r\n                })\r\n            }\r\n        }\r\n        if (submitOrder.length === 0) {\r\n            this.setState({ editModalVisible: false});\r\n            message.error(\"You should place at least one snack\")\r\n\r\n        } else {\r\n            axios.post('/order/'+ this.props.order._id +'/update', {\r\n                status:\"outstanding\",\r\n                snacks: submitOrder\r\n            }).then(response => {\r\n                if (response.data.success) {\r\n                    message.success(\"Order has been updated\")\r\n                    this.setState({ editModalVisible: false});\r\n                } else {\r\n                    message.error(\"Order updating errored!\")\r\n                }   \r\n            })\r\n        }  \r\n    }\r\n    // Allow customer to comment an order\r\n    onCommentSubmit = () => {\r\n        axios.post('/order/'+ this.props.order._id +'/update', {\r\n            comment: this.state.comment,\r\n            ratings: this.state.ratings\r\n        }).then(response => {\r\n            if (response.data.success) {\r\n                message.success(\"Order has been commented\")\r\n                this.setState({ editModalVisible: false});\r\n            } else {\r\n                message.error(\"Order commenting errored!\")\r\n            }   \r\n        })\r\n    }\r\n\r\n    renderActions = () =>{\r\n        \r\n        // Allow customer to edit and order according to the business rule\r\n        if(window.location.pathname === '/customer') {\r\n            return (\r\n                [\r\n                    <EyeOutlined onClick={() => this.handleShow()} />,\r\n                    <EditOutlined onClick={() => this.handleEditOrder()} />\r\n                ]\r\n            )\r\n        // For vendor part they can only view and mark the order as fulfilled or complete\r\n        } else if (window.location.pathname === '/orders') {\r\n            return (\r\n                [\r\n                    <EyeOutlined onClick={() => this.handleShow()} />,\r\n                    <EditOutlined onClick={() => this.onOrderMark()} />  \r\n                ]\r\n            )\r\n        }\r\n    }\r\n\r\n    // This is the modal for customer to edit order it will show if customer click the pencil button\r\n    renderEditModalContent = () => {\r\n        if (this.props.order.status === \"outstanding\"){\r\n            return(\r\n                <>\r\n                <Modal.Header closeButton style={{ background: '#F50057', borderColor: 'Black' }} >\r\n                        <Modal.Title>Menu</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.state.menu.map((snack, index) => (\r\n                            <Card cover={<img alt=\"example\" src={snack.picture} />} style={{marginBottom:\"2vh\"}} size={'small'} key={snack._id}>\r\n                                <Meta\r\n                                    title={snack.name + \"   $\" + snack.price}\r\n                                />\r\n                                <InputNumber key={snack._id} min={0} defaultValue={0} style= {{marginLeft:\"80%\"}} onChange={e => this.onChange(index,e)} />\r\n                            </Card>\r\n                        ))}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={() => this.onOrderSubmit()}>\r\n                        Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n                </>\r\n            )\r\n        } else{\r\n            return(\r\n                <>\r\n                <Modal.Header closeButton style={{ background: '#F50057', borderColor: 'Black' }} >\r\n                        <Modal.Title>{\"OrderId:\" + this.props.order.id}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>Vendor:{this.props.order.vendor.name}</p>\r\n                        <p>Snacks:{this.props.order.snacks.map((snack) => <li key= {snack.name}>{snack.name} - qty: {snack.qty}</li>)}</p>\r\n                        <Divider>Rate Your Experience</Divider>\r\n                        <p>Rating:</p><Rate onChange={(e) => this.ratingsChange(e)} />\r\n                        <Divider></Divider>\r\n                            <p>Comment</p><TextArea rows={4} onChange={(e) => this.commentChange(e.target.value)} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={() => this.onCommentSubmit()}>\r\n                            Submit\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Modal show = {this.state.modalVisible} onHide = {() => this.handleClose()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{\"OrderId:\" + this.props.order._id}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>Vendor:{this.props.order.vendor.name}</p>\r\n                        <p>Snacks:{this.props.order.snacks.map((snack) => <li key= {snack.name}>{snack.name} - qty: {snack.qty}</li>)}</p>\r\n                        {(this.props.order.discount) ? <p>Total: {this.props.order.total*1.25}*0.8 = {this.props.order.total}</p> :<p>Total:{this.props.order.total}</p>}\r\n                        {(this.props.order.ratings) ? <> <p>Ratings: </p> <Rate disabled value={this.props.order.ratings} /> </> : <></> }\r\n                        {(this.props.order.comment) ? <> <p>Comment: </p> <>{this.props.order.comment}</> </> : <></> }\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal show = {this.state.editModalVisible} onHide = {() => this.handleEditClose()}>\r\n                    {this.renderEditModalContent()}\r\n                </Modal>\r\n                {this.props.order.discount ? \r\n                    <Badge.Ribbon text = \"order has been discounted\">\r\n                        <Card style={{ margin: \"10px\"}}\r\n                            actions={this.renderActions()}>\r\n                            <Meta title={this.props.order.vendor.name + \"  -  \" + this.props.order.status} />\r\n                            {(this.props.order.status === \"fulfilled\") ? \"order is fulfilled\"\r\n                                :(this.props.order.status === \"completed\") ? \"order is completed\"\r\n                                    :<CountUp updatedAt={this.props.order.updatedAt} />}\r\n                        </Card>\r\n                    </Badge.Ribbon>\r\n                    :\r\n                    <Card style= {{ margin: \"10px\"}}\r\n                        actions={this.renderActions()}>\r\n                        <Meta title = {this.props.order.vendor.name + \"  -  \" + this.props.order.status} />\r\n                        {(this.props.order.status === \"fulfilled\") ? \"order is fulfilled\"\r\n                            :(this.props.order.status === \"completed\") ? \"order is completed\"\r\n                                :<CountUp updatedAt = {this.props.order.updatedAt} />}\r\n                    </Card>}\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from \"../commons/axios.js\";\r\nimport io from \"socket.io-client\";\r\nimport URLs from \"../url\";\r\nimport { Empty, message } from \"antd\";\r\n\r\nimport OrderBrief from './OrderBrief.js';\r\n\r\nfunction Orders(props) {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [status, setStatus] = useState('')\r\n    const id = props.id\r\n    console.log(props,\"Orders-props\")\r\n\r\n    useEffect(() => {\r\n         if (props.status) {\r\n             setStatus(props.status)\r\n        }\r\n        // fetch all order data\r\n        async function fetchData() {\r\n            console.log(props.target,\"props.target\");\r\n            console.log(id,\"id\")\r\n            console.log(status,\"status\")\r\n            axios.get(\"/order?\" + props.target + \"=\" + id + status).then(response => {\r\n                if (response.data.success) {\r\n                    setOrders(response.data.allOrders)              \r\n                } else {\r\n                    setOrders([])\r\n                   \r\n                }\r\n            }).catch(error => {\r\n                setOrders([]);\r\n            });         \r\n        }\r\n        fetchData()\r\n    }, [id, orders, props.target, props.status])\r\n\r\n\r\n    const renderOrders = orders.map((order) => {\r\n        return (\r\n            <OrderBrief key={order._id} order={order} />\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (orders.length > 0) ? renderOrders\r\n                    : <Empty \r\n                        image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                        imageStyle={{\r\n                            height: 60,\r\n                        }}\r\n                        description={\r\n                        <span>\r\n                            No Orders Found\r\n                        </span>\r\n                        }\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default class OrderList extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            orders: [],\r\n        }\r\n    }\r\n\r\n    // use socket to update the page concurrently\r\n    componentDidMount() {\r\n        const socket = io(`${URLs.socketURL}/socket`, { transports: ['websocket'] });\r\n        \r\n        socket.on(\"newOrder\", (order) => {\r\n            console.log(\"insertion detected at frontend\");\r\n            this.setState({ orders: [...this.state.orders, order]});\r\n        })\r\n\r\n        socket.on(\"updateOrder\", (id) => {\r\n            console.log(\"updated detected at frontend\");\r\n            console.log(id)\r\n        })\r\n\r\n        socket.on(\"deleteOrder\", (id) => {\r\n            console.log(\"deletion detected at frontend\");\r\n            const updatedOrders = this.state.orders.filter((order) => {\r\n                return order._id !== id;\r\n            })\r\n            this.setState({ orders: updatedOrders});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={{ height: '100vh', width: '100%', margin: \"auto\", \"marginTop\": \"5%\" }}>\r\n                <Orders id={this.props.id} orders = {this.state.orders} target={this.props.target} status={this.props.status} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\nimport { Divider, Drawer, PageHeader , message} from 'antd';\r\nimport axios from '../commons/axios.js';\r\nimport OrderList from './OrderList.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Header(props) {\r\n    let history = useHistory();\r\n    const [drawerVisible, setDrawerVisible] = useState(false)\r\n    const handleDrawerClose = () => setDrawerVisible(false);\r\n    const handleDrawerShow = () => setDrawerVisible(true);\r\n    const [title, setTitle] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [target, setTarget] = useState('');\r\n\r\n    // Setile Header for different pages\r\n    useEffect(() => {\r\n        // For customer header\r\n        if (history.location.pathname === \"/customer\") {\r\n            if (props.customer){\r\n                setTitle('Welcome, ' + props.customer.givenName)\r\n                setTarget('customer');\r\n                setOptions([<Button variant = 'outline-primary' key='0' style={{ borderColor: '#F50057' }} shape={\"round\"}\r\n                    onClick={() => {\r\n                        history.push('/profile', {\r\n                            customer: props.customer,\r\n                            orders: props.orders\r\n                        });\r\n                    }}>Profile</Button>,\r\n                <Button varient=\"outline-primary\" key=\"1\" style={{ background: '#F50057', borderColor: 'BLack' }} shape={\"round\"} onClick={handleDrawerShow}>See Orders</Button>])\r\n            }else{\r\n                setTitle('Welcome !');\r\n            }\r\n        \r\n        // For customer profile, only a back button.\r\n        } else if (history.location.pathname === \"/profile\") {\r\n            setTitle(\"Profile Settings\")\r\n            setOptions([\r\n                <Button variant = 'outline-primary' key='1' style={{ borderColor: '#F50057' }} shape={\"round\"}\r\n                    onClick={() => history.goBack()}>Back</Button>\r\n            ])\r\n\r\n        \r\n        } else if (history.location.pathname === \"/vendor\") {\r\n            setTitle(\"Time to earn MONEY, \" + props.vendor.name + \".\") \r\n        } else if (history.location.pathname === \"/orders\") {\r\n            setTitle(\"Time to earn MONEY, \" + props.vendor.name + \".\")\r\n            setOptions([<Button variant = 'outline-primary' key='0' style={{ borderColor: '#F50057' }} shape={\"round\"} onClick={onUnpark}>Unpark</Button>]);\r\n        }else {\r\n            setTitle(\"Hello!\")\r\n\r\n        }\r\n    }, [history, props.customer, props.orders]);\r\n\r\n    // A header for vendor to unpark their car\r\n    const onUnpark = () => {\r\n        axios.post('/vendor/park/' + props.vendor._id, {\r\n            location: [],\r\n            textAddress: \"\",\r\n            parked: false\r\n        }).then(response => {\r\n            message.success('You have successfully Unparked!!')\r\n            history.push({ pathname:'/'} )\r\n        })\r\n    }\r\n    \r\n    if (props.customer){\r\n        return (\r\n            <div>\r\n                <PageHeader title={title}\r\n                    extra={options}>\r\n                </PageHeader>\r\n                <Drawer visible={drawerVisible}\r\n                    closable={true}\r\n                    onClose={handleDrawerClose}\r\n                    width={'60vw'}>\r\n                    All orders\r\n                    <Divider />\r\n                    <OrderList id={props.customer.id} target={target} orders={props.orders} />\r\n                </Drawer>\r\n                \r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <PageHeader title={title}\r\n                    extra={options}>\r\n                </PageHeader>               \r\n            </div>\r\n        )       \r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/1.0c3c256d.png\";","import React, { useState } from 'react'\r\nimport { InputNumber, Modal, Button, message, Card } from 'antd';\r\nimport axios from '../commons/axios';\r\n\r\nimport { Icon } from \"leaflet\";\r\nimport image from '../icons/1.png';\r\nimport { Marker } from 'react-leaflet';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst {Meta} = Card;\r\n\r\nexport default function Menu(props) {\r\n\r\n    const vendorIcon = new Icon({\r\n        iconUrl: image,\r\n        iconSize: [40, 40],\r\n    })\r\n\r\n    const [modalVisible, setIsModalVisible] = useState(false);\r\n    const [order, setOrder] = useState([]);\r\n    \r\n    const handleModalShow = () =>{\r\n        setIsModalVisible(true);\r\n\r\n    } \r\n    const handleModalClose = () => setIsModalVisible(false);\r\n    const showModal = () => {setIsModalVisible(true)};\r\n    const handleOk = () => {setIsModalVisible(false)};\r\n    const handleCancel = () => {setIsModalVisible(false)};\r\n      \r\n    // Update order.\r\n    const onChange = (index, event) => {\r\n        console.log(\"onChange\")\r\n        let newArray = [...order];\r\n        newArray[index] = event;\r\n        setOrder(newArray);\r\n\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    // Submit updated order.\r\n    const onSubmit = () => {\r\n        console.log(\"onSubmit\")\r\n        var total = 0\r\n        // Customer not loginned.\r\n        if (!props.customer) {\r\n            message.error(\"You need to login first!\")\r\n            history.goBack()\r\n        // Submit order and ensure every new oder is recorded into the order list\r\n        } else {\r\n            var submitOrder = []\r\n            for (var i = 0; i < order.length; i++) {\r\n                if(Number.isFinite(order[i])) {\r\n                    submitOrder.push({\r\n                        \"name\": props.snacks[i].name,\r\n                        \"price\":props.snacks[i].price,\r\n                        \"qty\": order[i]\r\n                    })\r\n                }\r\n            }\r\n            // Calculate price\r\n            for (var j=0; j<submitOrder.length; j++){\r\n                let update = total + submitOrder[j].price *submitOrder[j].qty\r\n                total = update\r\n            }\r\n            // If order placed does not have snack\r\n            if (submitOrder.length === 0) {\r\n                setIsModalVisible(false)\r\n                message.error(\"You should order at least one snack\")\r\n            // else the order will be re-created and save into database\r\n            } else {\r\n                axios.post('/order/create', {\r\n                    customer: props.customer.id,\r\n                    vendor: props.vendor.id,\r\n                    snacks: submitOrder,\r\n                    total: total\r\n                }).then(response => {\r\n                    if (response.data.success) {\r\n                        message.success(\"Order has been placed\")\r\n                        setIsModalVisible(false)\r\n                    } else {\r\n                        message.error(\"Order has not been placed!\")\r\n                    }   \r\n                })\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Marker key={props.id} position={props.position} icon={vendorIcon}\r\n                eventHandlers={{ click: handleModalShow }}>\r\n            </Marker>\r\n            <Modal title=\"Basic Modal\" title={'Menu of '+props.vendor.name} visible={modalVisible} onOk={onSubmit} onCancel={handleCancel} closeButton >\r\n\r\n                {props.snacks.map((snack, index) => (\r\n                    <Card\r\n                    hoverable\r\n                    style={{ width: 240,marginTop:20 }}\r\n                    cover={<img alt=\"example\" src={snack.picture} />} key={snack._id}\r\n                    >\r\n                        <Meta title={snack.name + \" $\" + snack.price} />\r\n                        <InputNumber key={snack._id} min={0} style={{ marginLeft: \"80%\"}} onChange={e => onChange(index, e)}></InputNumber>\r\n                    </Card>\r\n\r\n                ))}\r\n            </Modal>\r\n        </>\r\n    \r\n    )\r\n}\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MapContainer as Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport { message} from 'antd';\r\n\r\nimport Menu from './Menu.js';\r\nimport axios from '../commons/axios.js';\r\n\r\nexport default function LeafletMap(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [address, setAddress] = useState('');\r\n\r\n    const [position, setPosition] = useState(props.center)\r\n    const eventHandlers = useMemo(\r\n        (e) => ({\r\n            dragend(e) {\r\n                console.log(e.target.getLatLng())\r\n                setPosition(e.target.getLatLng())\r\n            },\r\n            click() {\r\n                handleShow()\r\n            }\r\n        }),\r\n        [],\r\n    )\r\n    \r\n    // To make vendor able to park on the map\r\n    const onPark = () => {\r\n        console.log(\"leafletmap-34 \" + props.vendor._id +\"!\")\r\n        axios.post('/vendor/park/' + props.vendor._id, {\r\n            location:[position.lat, position.lng],\r\n            textAddress:address,\r\n            parked: true\r\n        }).then(response => {\r\n            message.success('You have successfully parked at here')\r\n            history.push({ pathname:'/orders', state: { vendor: props.vendor } })\r\n        })\r\n    }\r\n    \r\n    // Set a marker for customer so they know where they are\r\n    const renderCustomerMarker = (\r\n        <Marker position={props.center} iconUrl={\"https://img-premium.flaticon.com/png/512/4108/4108831.png?token=exp=1\"} >\r\n        <Popup>\r\n            Your Curent location.\r\n        </Popup>\r\n        </Marker>\r\n    )\r\n    \r\n    // Set vendor marker for customer to let customer know where their five nearest vendor are\r\n    const renderFiveVendor = props.vendors.map((vendor) => {\r\n        return (\r\n            <Menu key={vendor.id} position={vendor.location} snacks={props.snacks}\r\n                vendor={vendor} customer={props.customer}/>\r\n        )\r\n    })\r\n\r\n    // Vendor marker, they can drap to select place to park.(to be more precise of place)\r\n    const renderVendorMarker = (\r\n        <Marker \r\n            draggable={true}\r\n            eventHandlers={eventHandlers}\r\n            position={position}>\r\n        </Marker>\r\n    )\r\n    \r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={handleClose} style={{ marginTop: '2vh'}}>\r\n                <Modal.Header closeButton style={{ background: '#F50057', borderColor: 'Black' }} >\r\n                    <Modal.Title>Vendor Park</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Text parking address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter address\"\r\n                                    onChange={e => setAddress(e.target.value)} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Tell us where you are pls\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button varient=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={onPark}>\r\n                        Completely ready for business!\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal> \r\n            <Map center={props.center} zoom={18} scrollWheelZoom={false}\r\n                style={{ height: \"90vh\" }}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    \r\n                />\r\n                {(history.location.pathname === \"/customer\" ? renderCustomerMarker : <></>)}\r\n                {(history.location.pathname === \"/customer\" ? renderFiveVendor : <></>)}\r\n                {(history.location.pathname === \"/vendor\" ? renderVendorMarker : <></>)}                \r\n            </Map>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from '../commons/axios.js';\r\n\r\nimport Header from '../components/Header.js'\r\nimport LeafletMap from '../components/LeafletMap.js'\r\n\r\nexport default function CustomerMain(props) {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [snacks, setSnacks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // To get all order detail for one customer\r\n        if (props.location.state.customer) {\r\n            axios.get('/order?customer=' + props.location.state.customer.id).then(response => {\r\n                setOrders(response.data.allOrders)\r\n            })\r\n        }\r\n        axios.get('/snack').then(response => {\r\n            setSnacks(response.data.snacks)\r\n        })\r\n       \r\n    }, [props.location.state.position, props.location.state.vendors, props.location.state.customer]); \r\n\r\n    // This is to pass message to other file\r\n    return(\r\n        <>\r\n            <Header\r\n                customer={props.location.state.customer}\r\n                orders={orders} />\r\n            <LeafletMap\r\n                center={props.location.state.position}\r\n                vendors={props.location.state.vendors}\r\n                snacks={snacks}\r\n                customer={props.location.state.customer} />\r\n            \r\n        </>\r\n    \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Input, Divider, Typography, message } from 'antd';\r\nimport axios from '../commons/axios.js';\r\nimport Header from '../components/Header.js';\r\n\r\nexport default function CustomerProfile(props) {\r\n    const [form] = Form.useForm();\r\n    const { Link } = Typography;\r\n\r\n    const [givenName, setGivenName] = useState(props.location.state.customer.givenName);\r\n    const [familyName, setFamilyName] = useState(props.location.state.customer.familyName);\r\n    const [email, setEmail] = useState(props.location.state.customer.email);\r\n    const [password, setPassword] = useState(props.location.state.customer.password);\r\n    const [disable, setDisable] = useState(true);\r\n\r\n    const enablePassword = () => {\r\n        if (disable) { setDisable(false) }\r\n        else { setDisable(true) }\r\n    }\r\n\r\n    // Function used if the customer click the submit button for edit profile\r\n    const onSubmit = () => {\r\n        const updateBody = {\r\n            \"givenName\": givenName,\r\n            \"familyName\": familyName,\r\n            \"email\": email,\r\n            \"password\": password\r\n        }\r\n        axios.post('/customer/update', updateBody).then(response => {\r\n            if (response.data.success) {\r\n                message.success(\"Your information has been successfully updated\")\r\n            } else {\r\n                message.error(response.data.error)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div style={{ width: '40%', margin: 'auto' }}>\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item label=\"Given Name\">\r\n                        <Input placeholder='given name' defaultValue={props.location.state.customer.givenName}\r\n                            onChange={e => setGivenName(e.target.value)} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Family Name\">\r\n                        <Input placeholder=\"family name\" defaultValue={props.location.state.customer.familyName}\r\n                            onChange={e => setFamilyName(e.target.value)} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email\">\r\n                        <Input placeholder=\"email\" defaultValue={props.location.state.customer.email}\r\n                            onChange={e => setEmail(e.target.value)} />\r\n                    </Form.Item>\r\n                    <Divider >Click <Link onClick={enablePassword} target=\"_blank\">\r\n                        here\r\n                    </Link> to change password</Divider>\r\n                    <Form.Item label=\"Password\">\r\n                        <Input placeholder=\"password\"\r\n                            type=\"password\"\r\n                            defaultValue={props.location.state.customer.password}\r\n                            disabled={disable}\r\n                            onChange={e => setPassword(e.target.value)} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" style={{ background: '#F50057', borderColor: 'Black' }} shape=\"round\" onClick={onSubmit}>Submit</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\n    \r\n","import React from 'react'\r\n\r\nimport Header from '../components/Header.js';\r\nimport LeafletMap from '../components/LeafletMap.js';\r\n\r\nexport default function VendorPark(props) {\r\n    // Send required information for vendor to park\r\n    return (\r\n        <div>\r\n            <Header \r\n                id={props.location.state.vendor.id}\r\n                vendor={props.location.state.vendor}/>\r\n            <LeafletMap\r\n                center={props.location.state.position}\r\n                vendor={props.location.state.vendor}\r\n                vendors={[]} />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Row, Button } from 'antd'\r\n\r\nimport Header from '../components/Header.js';\r\nimport OrderList from '../components/OrderList.js';\r\n\r\nexport default function VendorOrders(props) {\r\n\r\n    const [target, setTarget] = useState('');\r\n    const [status, setStatus] = useState('outstanding');\r\n\r\n    useEffect(() => {\r\n        if (window.location.pathname === '/orders') {\r\n            setTarget('vendor')\r\n        }\r\n    }, [])\r\n    // Onclick of top of vendor order page, required order will be shown\r\n    return ( \r\n        <div>\r\n            <Header vendor={props.location.state.vendor} />\r\n            <div style={{marginLeft:'3vw', alignItems:'center'}}>\r\n                <Row gutter={6}>\r\n                    <Button onClick={() => setStatus('&status=outstanding')} style={ { background: '#F50057', borderColor: 'Black', marginLeft:'1vw' }} shape='round' >Outstanding</Button>\r\n                    <Button onClick={() => setStatus('&status=completed')} style={ { background: '#F50057', borderColor: 'Black', marginLeft:'1vw' }} shape='round' >Completed</Button>\r\n                    <Button onClick={() => setStatus('&status=fulfilled')} style={ { background: 'White', borderColor: '#F50057', marginLeft:'1vw' }} shape='round' >Fulfilled</Button>\r\n                </Row>\r\n            </div>\r\n            <OrderList id={props.location.state.vendor._id} target={target} status={status} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport App from './pages/App.js';\r\nimport CustomerMain from './pages/CustomerMain.js';\r\nimport CustomerProfile from './pages/CustomerProfile.js';\r\nimport VendorPark from './pages/VendorPark.js';\r\nimport VendorOrder from './pages/VendorOrders.js';\r\n\r\n\r\nclass Router extends React.Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={App}></Route>\r\n                    <Route path=\"/customer\" exact component={CustomerMain}></Route>\r\n                    <Route path=\"/profile\" exact component={CustomerProfile}></Route>\r\n                    <Route path=\"/vendor\" exact component={VendorPark}></Route>\r\n                    <Route path=\"/orders\" exact component={VendorOrder}></Route>\r\n\r\n\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Router from './router.js';\r\n//import './index.css';\r\n//import App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n//import { Router } from 'express';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n  <Router />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}